{"version":3,"sources":["src/utils/Enums.tsx","src/utils/i18n.js","src/components/BaseComponent.js","src/components/SmoothNavBar.js","src/components/Http.js","src/utils/JapaneseEra.tsx","src/utils/Utils.js","src/utils/Calendar.js","src/sections/intro/Profile.js","src/sections/intro/Contact.js","src/sections/intro/Intro.js","src/sections/Tech.js","src/components/ColumnView.js","src/sections/pr.js","src/sections/Projects.js","App.js","src/components/Section.js","webpack:///D:/Projects/portfolio-pwa/App.css?47bc","App.css","assets/avatar_160x160.jpg"],"names":["NavItem","TechType","HttpMethod","Enums","e","Object","keys","i18n","use","LanguageDetector","initReactI18next","init","resources","en","translation","jp","interpolation","escapeValue","GetLanguage","language","window","localStorage","i18nextLng","BaseComponent","props","switchLanguage","preventDefault","target","changeLanguage","setState","lang","state","data","isLoading","Component","SmoothNavBar","navItems","enumKeys","k","push","Nav","Link","key","href","Navbar","bg","expand","sticky","className","Button","variant","onClick","this","Collapse","id","Http","action","request","localUrl","fetch","then","response","res","ok","json","status","statusText","console","error","url","Promise","resolve","reject","catch","i","MakeRequest","method","get","headers","JapaneseEra","name","nameEN","dateStarted","Browser","navigator","userAgent","indexOf","document","documentMode","Wareki","date","eras","Date","sort","a","b","index","length","year","getYear","includes","LocalTime","locale","timezone","isChrome","str","toLocaleDateString","timeZone","separator","parts","split","month","day","Experience","months","lblYear","lblMonth","years","Math","floor","remainder","Profile","lng","ItemList","useState","setLoading","setData","useEffect","encodeURIComponent","undefined","finally","MainContent","Col","Card","Body","Container","Row","Title","ActivityIndicator","strAddress","transit","stationAccess","strBirth","validity","address","addressParts","town","ward","city","prefecture","country","line","station","colItemWidth","birth","identity","txtIntro","forEach","pop","reverse","join","access","map","x","time","ItemRow","item","val","Translation","t","xs","width","idStatus","items","Contact","sns","files","setLang","openExternal","isEmailAddr","validator","isEmail","lblOK","confirmAlert","title","message","buttons","label","Linking","openURL","closeOnEscape","closeOnClickOutside","Intro","colLeft","txtName","Subtitle","Img","src","require","Alert","style","display","Tech","languages","backend","db","servers","frontend","mobile","os","ides","editors","other","createDivs","techList","divs","stackIdx","badges","w","toLowerCase","Badge","as","rows","v","langs","tools","techDivs","rowKey","ColumnView","content","PR","Lang","abbr","level","description","langLv","langRows","interests","colLangs","colInterests","Projects","viewApp","CompanyProject","company","period","colCompany","projs","proj","idx","ScrollView","scoller","colPersonal","App","section","intro","techs","pr","projects","sections","Header","api","__esModule","default","module","options","exports","locals","___CSS_LOADER_API_IMPORT___"],"mappings":"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","file":"static/js/app.e665cec4.chunk.js","sourcesContent":["export enum NavItem {\r\n  intro = \"Introduction\",\r\n  techs = \"Technologies\",\r\n  pr = \"PR\",\r\n  projects = \"Projects\"\r\n}\r\n\r\nexport enum TechType {\r\n  langs = \"Programming Languages\",\r\n  backend = \"Backend\",\r\n  frontend = \"Frontend\",\r\n  os = \"OS\",\r\n  tools = \"Tools\"\r\n}\r\n\r\nexport enum HttpMethod {\r\n  get = \"GET\", \r\n  post = \"POST\", \r\n  put = \"PUT\", \r\n  delete = \"DELETE\"\r\n}\r\n\r\nexport default class Enums {\r\n\r\n  static enumKeys<E>(e: E): (keyof E)[] {\r\n    return Object.keys(e) as (keyof E)[];\r\n  }\r\n  \r\n}","import i18n from \"i18next\";\r\nimport { initReactI18next } from \"react-i18next\";\r\nimport LanguageDetector from \"i18next-browser-languagedetector\";\r\n\r\nconst resources = {\r\n  en: {\r\n    translation: {\r\n      'address': 'Address',\r\n      'transit': 'Nearest Station',\r\n      'birth': 'DOB', \r\n      'identity': 'Identity',\r\n      'nationality': 'Nationality',\r\n      'visa': 'Visa', \r\n      'validity': 'Validity',\r\n      'experience': \"Experienced Years\", \r\n      'intro': \"Personal Introduction\",\r\n    }\r\n  }, \r\n  jp: {\r\n    translation: {\r\n      'address': '住所', \r\n      'transit': '最寄駅',\r\n      'birth': '生年月日', \r\n      'identity': '身分',\r\n      'nationality': '国籍',\r\n      'visa': '在留資格', \r\n      'validity': '有効期限',\r\n      'experience': \"経験年数\", \r\n      'intro': \"個人紹介\",\r\n    }\r\n  }\r\n}\r\n\r\ni18n\r\n  .use(LanguageDetector)\r\n  .use(initReactI18next)\r\n  .init({\r\n    resources: resources,\r\n    interpolation: {\r\n      escapeValue: false\r\n    }\r\n  })\r\n\r\nexport default i18n\r\n\r\nexport function GetLanguage() {\r\n  return i18n.language ||\r\n    (typeof window !== 'undefined' && window.localStorage.i18nextLng) ||\r\n    'en';\r\n};","import { Component } from 'react'\r\nimport i18n, { GetLanguage } from '../utils/i18n'\r\n\r\nclass BaseComponent extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      data: [],\r\n      isLoading: true, \r\n      lang: GetLanguage(),\r\n    }\r\n  }\r\n\r\n  switchLanguage = (e) => {\r\n    e.preventDefault()\r\n    const current = GetLanguage()\r\n    const target = current == 'en' ? 'jp' : 'en'\r\n    i18n.changeLanguage(target)\r\n    this.setState({ lang: target })\r\n  }\r\n}\r\n\r\nexport default BaseComponent","import React from 'react';\r\nimport { Component } from \"react\";\r\nimport { Button, Nav, Navbar } from \"react-bootstrap\";\r\nimport Enums, { NavItem } from \"../utils/Enums\";\r\nimport i18n, { GetLanguage } from '../utils/i18n';\r\nimport BaseComponent from './BaseComponent';\r\n\r\nclass SmoothNavBar extends BaseComponent {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n\r\n    // switchLanguage = (e) => {\r\n    //     e.preventDefault()\r\n    //     window.location.reload()\r\n    //     const current = GetLanguage()\r\n    //     const target = current == 'en' ? 'jp' : 'en'\r\n    //     i18n.changeLanguage(target)\r\n    //     super.setState({lang: target})\r\n    // }\r\n\r\n    render() {\r\n        const navItems = []\r\n        for (const k of Enums.enumKeys(NavItem)) {\r\n            navItems.push(\r\n                <Nav.Link key={k} href={\"#\" + k}>{NavItem[k]}</Nav.Link>\r\n            )\r\n        }\r\n\r\n        return(\r\n            <Navbar bg=\"light\" expand=\"lg\" sticky=\"top\" \r\n                className=\"shadow p-3 mb-5 bg-white rounded\">\r\n                <Button variant='light' onClick={this.switchLanguage}>EN/JP</Button>\r\n                <Navbar.Collapse \r\n                    className=\"justify-content-end\" \r\n                    id=\"basic-navbar-nav\">\r\n                    <Nav className=\"mr-auto\">\r\n                        {navItems}\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n            </Navbar>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SmoothNavBar","import { HttpMethod } from \"../utils/Enums\"\r\n\r\nexport default function Http(action, request) {\r\n\r\n  let url = `https://hanabi-tube.herokuapp.com/${action}`\r\n  let localUrl = `http://127.0.0.1:5000/${action}`\r\n\r\n  return fetch(url, { request })\r\n  .then((response) => {\r\n    var res\r\n\r\n    if (response.ok) {\r\n      res = response.json()\r\n    } else {\r\n      res = {\r\n        \"status\": response.status,\r\n        \"msg\": response.statusText,\r\n        'is_error': !response.ok\r\n      }\r\n      console.error({url: localUrl, res: res})\r\n    }\r\n\r\n    return new Promise((resolve, reject) => {\r\n      resolve(res)\r\n    })\r\n  })\r\n  .catch((error) => console.error({i: localUrl, e: error}))\r\n  \r\n}\r\n\r\nexport function MakeRequest(method = HttpMethod.get) {\r\n  return {\r\n    method: method,\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n  }\r\n}","export default class JapaneseEra {\r\n  name: String\r\n  nameEN: String\r\n  dateStarted: Date\r\n\r\n  constructor(name: String, nameEN:String, dateStarted: Date) {\r\n    this.name = name\r\n    this.nameEN = nameEN\r\n    this.dateStarted = dateStarted\r\n  }\r\n}","export function Browser() { \r\n  if((navigator.userAgent.indexOf(\"Opera\") || navigator.userAgent.indexOf('OPR')) != -1 ) {\r\n      return 'Opera';\r\n  } else if(navigator.userAgent.indexOf(\"Chrome\") != -1 ) {\r\n      return 'Chrome';\r\n  } else if(navigator.userAgent.indexOf(\"Safari\") != -1) {\r\n      return 'Safari';\r\n  } else if(navigator.userAgent.indexOf(\"Firefox\") != -1 ){\r\n      return 'Firefox';\r\n  } else if((navigator.userAgent.indexOf(\"MSIE\") != -1 ) || (!!document.documentMode == true )) {\r\n      return 'IE';//crap\r\n  } else {\r\n      return 'Unknown';\r\n  }\r\n}","import JapaneseEra from \"./JapaneseEra\"\r\nimport { Browser } from \"./Utils\";\r\n\r\nexport function Wareki(date, lang) {\r\n  const eras = [\r\n    new JapaneseEra('令和', 'Reiwa', new Date('2019-05-01')),\r\n    new JapaneseEra('平成', 'Heisei', new Date('1989-01-08')),\r\n    new JapaneseEra('昭和', 'Showa', new Date('1926-12-25')),\r\n    new JapaneseEra('大正', 'Taisho', new Date('1912-07-30')),\r\n  ].sort((a, b) => a.dateStarted > a.dateStarted)\r\n\r\n  for (let index = 0; index < eras.length; index++) {\r\n    const e = eras[index];\r\n    if (date >= e.dateStarted) {\r\n      const year = date.getYear() - e.dateStarted.getYear() + 1\r\n      return `${lang}`.includes('en') \r\n        ? `${e.nameEN} ${year}` \r\n        : `${e.name}${year}年`\r\n    }\r\n  }\r\n}\r\n\r\nexport function LocalTime(date, locale = 'jp-JP', timezone = 'Japan') {\r\n  let res\r\n\r\n  if (locale == 'jp-JP') {\r\n    const isChrome = Browser() == 'Chrome' \r\n    const str = date.toLocaleDateString(locale, { timeZone: timezone})\r\n    const separator = isChrome ? '/' : '-'\r\n    const parts = str.split(separator)\r\n    res = isChrome\r\n    ? `${parts[2]}年${parts[1]}月${parts[0]}日`\r\n    : `${parts[0]}年${parts[1]}月${parts[2]}日`\r\n  } else {\r\n    res = date.toLocaleDateString(locale, { \r\n      timeZone: timezone,\r\n      year: 'numeric',\r\n      month: 'long',\r\n      day: 'numeric'\r\n    })\r\n  }\r\n  \r\n  return res\r\n}\r\n\r\nexport function Experience(months, lang) {\r\n  const years = Math.floor(months / 12.0)\r\n  const remainder = months % 12\r\n\r\n  let lblYear, lblMonth, res\r\n  if (`${lang}`.includes('en')) {\r\n    lblYear = years < 1 ? 'year' : 'years'\r\n    lblMonth = months < 1 ? 'month' : 'months'\r\n\r\n    res = years < 1 \r\n      ? `${months} ${lblMonth}` \r\n      : `${years} ${lblYear} ${remainder} ${lblMonth}`\r\n  } else {\r\n    lblYear = '年'\r\n    lblMonth = '月'\r\n\r\n    if (months == 6) {\r\n      res = '半年'\r\n    } else if (remainder == 6) {\r\n      res = `${years}年半`\r\n    } else {\r\n      res = years < 1 \r\n        ? `${months}${lblMonth}` \r\n        : `${years}${lblYear}${remainder}${lblMonth}`\r\n    }\r\n  }\r\n  return res\r\n}","import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Col, Card, Container, Row } from \"react-bootstrap\";\r\nimport { Translation } from 'react-i18next';\r\nimport { ActivityIndicator } from \"react-native\";\r\nimport Http, { MakeRequest } from \"../../components/Http\";\r\nimport { Experience, LocalTime, Wareki } from \"../../utils/Calendar\";\r\nimport { GetLanguage } from '../../utils/i18n';\r\n\r\nexport default function Profile(lng) {\r\n\r\n  const [isLoading, setLoading] = useState(true)\r\n  const [data, setData] = useState([])\r\n  const lang = lng ?? GetLanguage()\r\n\r\n  useEffect(() => {\r\n    const request = MakeRequest()\r\n    Http(`profile?lang=${encodeURIComponent(lang)}`, request)\r\n    .then((res) => {\r\n      if (res !== undefined) {\r\n        setData(res)\r\n      }\r\n    })\r\n    .finally(() => setLoading(false))\r\n  }, [])\r\n\r\n  // Init the layout\r\n  let ItemList\r\n  const MainContent = () => (\r\n    <Col>\r\n      <Card.Body>\r\n        <Container className=\"intro-container\">\r\n          <Row className=\"title-row\">\r\n            <Col><Card.Title>{ data['title'] }</Card.Title></Col>\r\n          </Row>\r\n          { data['is_error'] \r\n          ? <p>Failed to load</p> \r\n          : isLoading \r\n          ? <ActivityIndicator /> \r\n          : <ItemList /> }\r\n        </Container>\r\n      </Card.Body>\r\n    </Col>\r\n  )\r\n\r\n  // Loading or error: return the layout\r\n  if (isLoading || data['is_error']) {\r\n    return (<MainContent />)\r\n  }\r\n\r\n  // Finished loading: display the data with the layout\r\n  // Address\r\n  const address = data.address\r\n  let strAddress, transit, stationAccess, strBirth, validity\r\n  const addressParts = [address.town, address.ward, address.city, address.prefecture, address.country]\r\n  transit = `${data['transit'].line} ${data['transit'].station}`\r\n  // Birthday, Identity\r\n  const birth = new Date(data['birth'])\r\n  const identity = data['identity']\r\n  // Intro: as paragraphs\r\n  const txtIntro = []\r\n  data['summary'].split('\\\\n\\\\n').forEach((e, i) => {\r\n    txtIntro.push(<p key={i}>{e}</p>)\r\n  })\r\n\r\n  // Create the strings and determine the width\r\n  let colItemWidth\r\n  if (lang == 'jp') {\r\n    addressParts.pop()\r\n    strAddress = addressParts.reverse().join(' ')\r\n    stationAccess = data['transit'].access.map(x => `${x.method}${x.time}分`).join(', ')\r\n    strBirth = LocalTime(birth)\r\n    validity = LocalTime(new Date(identity['expire_on']))\r\n    colItemWidth = 2\r\n  } else {\r\n    strAddress = addressParts.join(', ')\r\n    transit += ' Line'\r\n    stationAccess = data['transit'].access.map(x => `${x.time} mins ${x.method}`).join(', ')\r\n    strBirth = LocalTime(birth, 'en-US', 'Asia/Taipei')\r\n    validity = LocalTime(new Date(identity['expire_on']), 'en-US', 'Japan')\r\n    colItemWidth = 3\r\n  }\r\n\r\n  // Inside layouts\r\n  // Row\r\n  const ItemRow = (props) => {\r\n    const { name, val } = props.item\r\n    return (<Row>\r\n      <Translation>\r\n        { t => \r\n          <Col xs= { props.width }>\r\n            <b>{ t(name) }</b>\r\n          </Col>\r\n        }\r\n      </Translation>\r\n      <Col>{ val }</Col>\r\n    </Row>)\r\n  }\r\n\r\n  // Identity row details\r\n  const idStatus = ( \r\n    <Translation>\r\n      { t => \r\n        <div>\r\n          {t('nationality')}：{identity['nationality']}<br/>\r\n          {t('visa')}：{identity['visa']}<br/>\r\n          {t('validity')}：{validity}\r\n        </div>\r\n      }\r\n    </Translation>\r\n  )\r\n\r\n  // Row details\r\n  const items = [\r\n    { name: \"address\", val: `〒${address['postal_code']} ${strAddress}` }, \r\n    { name: \"transit\", val: `${transit} ${stationAccess}`}, \r\n    { name: \"birth\", val: `${strBirth} ${Wareki(birth, lang)}` }, \r\n    { name: \"identity\", val: idStatus }, \r\n    { name: \"experience\", val: Experience(data['experience'], lang) }, \r\n    { name: \"intro\", val: txtIntro}\r\n  ]\r\n  \r\n  // Rows\r\n  ItemList = () => (\r\n    items.map((item, i) => (<ItemRow key={ `row-${i}` } \r\n      width={ colItemWidth }\r\n      item={ item }/>))\r\n  )\r\n\r\n  return (<MainContent />)\r\n}","import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { FaGithub, FaLinkedin, FaTwitter, FaFileExcel, FaFileWord, FaFilePdf } from 'react-icons/fa'\r\nimport { IoDocumentOutline } from 'react-icons/io5'\r\nimport { TiContacts, TiMail} from 'react-icons/ti'\r\nimport { ActivityIndicator } from \"react-native\";\r\nimport Http, { MakeRequest } from \"../../components/Http\";\r\nimport validator from 'validator';\r\nimport { confirmAlert } from \"react-confirm-alert\";\r\n\r\nexport default function Contact() {\r\n  const [isLoading, setLoading] = useState(true)\r\n  const [data, setData] = useState([])\r\n  const [lang, setLang] = useState('')\r\n\r\n  useEffect(() => {\r\n    const request = MakeRequest()\r\n    Http('contact', request)\r\n    .then((res) => {\r\n      if (res !== undefined) {\r\n        setData(res)\r\n      }\r\n    })\r\n    .finally(() => {\r\n      setLoading(false)\r\n      setLang(lang)\r\n    })\r\n  }, [])\r\n\r\n  function openExternal(url) {\r\n    const isEmailAddr = validator.isEmail(url)\r\n    const lblOK = isEmailAddr ? \"Send\" : \"Open\"\r\n\r\n    confirmAlert({\r\n      title: \"Warning: Opening External Link\",\r\n      message: url,\r\n      buttons: [\r\n        {\r\n          label: \"Cancel\",\r\n        },\r\n        {\r\n          label: lblOK,\r\n          onClick: () => {\r\n            if (isEmailAddr) {\r\n              url = `mailto:${url}`\r\n            }\r\n            Linking.openURL(url)\r\n          }\r\n        }, \r\n      ],\r\n      closeOnEscape: true,\r\n      closeOnClickOutside: true,\r\n    })\r\n  }\r\n\r\n  let sns, files\r\n\r\n  if (!isLoading && !data['is_error']) {\r\n    sns = (\r\n      <div className=\"profile-icons\">\r\n        <FaGithub onClick={ () => { openExternal(data['github']) } }/>\r\n        <FaLinkedin onClick={ () => { openExternal(data['linkedin']) } }/>\r\n        <FaTwitter onClick={ () => { openExternal(data['twitter']) } }/>\r\n      </div>\r\n    )\r\n\r\n    files = (\r\n      <div className=\"contact-icons\">\r\n        <TiMail/><a href=\"#\" onClick={ () => { openExternal(data['email'])} }>{data['email']}</a><br/>\r\n        <IoDocumentOutline/>CV: <FaFileWord/>/<FaFilePdf/><br/>\r\n        <IoDocumentOutline/>履歴書: <FaFileExcel/>/<FaFilePdf/><br/>\r\n        <IoDocumentOutline/>職務経歴書: <FaFileWord/>/<FaFilePdf/><br/>\r\n        <TiContacts/>Contact Me\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return(<div>{ isLoading \r\n    ? <ActivityIndicator/> \r\n    : <div>{sns}{files}</div>}</div>)\r\n}","import React from 'react';\r\nimport { Alert, Card, Col, Container, Row } from 'react-bootstrap';\r\nimport { ActivityIndicator } from 'react-native';\r\nimport 'react-confirm-alert/src/react-confirm-alert.css';\r\nimport Http, { MakeRequest } from '../../components/Http';\r\nimport '../../utils/i18n';\r\nimport Profile from './Profile';\r\nimport Contact from './Contact';\r\nimport BaseComponent from '../../components/BaseComponent';\r\n\r\nclass Intro extends BaseComponent {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const request = MakeRequest()\r\n    Http(`basic?lang=${encodeURIComponent(this.state.lang)}`, request)\r\n    .then((res) => {\r\n      if (res !== undefined) {\r\n        this.setState({ data: res })\r\n      }\r\n    })\r\n    .finally(() => {\r\n      this.setState({ \r\n        isLoading: false, \r\n        lang: this.state.lang \r\n      })\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { data, isLoading, lang } = this.state\r\n\r\n    let colLeft\r\n\r\n    if (!isLoading && !data['is_error']) {\r\n\r\n      const txtName = lang.includes('en') \r\n        ? (<Card.Title>{data['first_name']} {data['last_name']}</Card.Title>)\r\n        : (<div>\r\n          <Card.Subtitle className=\"text-muted furigana\">{data['last_name_jp']} {data['first_name_jp']}</Card.Subtitle>\r\n          <Card.Title className=\"sino-name\">{data['last_name']} {data['first_name']}</Card.Title>\r\n        </div>)\r\n\r\n      colLeft = (\r\n        <Col className=\"col-auto\">\r\n          <Card.Body>\r\n            <Card.Img src={require('../../../assets/avatar_160x160.jpg')} />\r\n            {txtName}\r\n            <Contact/>\r\n          </Card.Body>\r\n        </Col>\r\n      )\r\n    }\r\n    return (\r\n      <Container>\r\n        <Row>\r\n          <Alert style={{ display: data['is_error'] ? 'block' : 'none' }}\r\n              variant='warning'>{data['status']}: \r\n              {data['msg']}</Alert>\r\n            { isLoading ? <ActivityIndicator/> : colLeft }\r\n            <Profile/>\r\n        </Row>\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Intro","import React, { Component } from 'react';\r\nimport { Badge, Card, Col, Container, Row } from 'react-bootstrap';\r\nimport Enums, { TechType } from '../utils/Enums';\r\n\r\nclass Tech extends Component {\r\n\r\n  render() {\r\n    var languages = ['C#', 'Swfit', 'PHP', 'JavaScript', 'Java', 'Kotlin', 'Objective-C', 'HTML', 'CSS', 'Python 3']\r\n    var backend = ['NET Framework', 'Laravel 5', 'Spring Boot']\r\n    var db = ['MySQL', 'MS SQL Server', 'mongodb']\r\n    var servers = ['IIS5', 'IIS7', 'Apache 2', 'Tomcat 8']\r\n    var frontend = ['vue', 'react']\r\n    var mobile = ['cocoapod', 'UIKit', 'nib/xib', 'cocoa', 'storyboard']\r\n    var os = ['Windows 10', 'Windows Server 2012', 'Ubuntu 14.04 LTS', 'Centos 8', 'macOS', 'iOS', 'Android']\r\n    var ides = ['Visual Studio 2017', 'VS Code', 'Xcode', 'Intellij', 'eclipse', 'PyCharm']\r\n    var editors = ['Notepad++', 'Sublime Text 3']\r\n    var other = ['Unity3D', 'jsfiddle']\r\n\r\n    const createDivs = (techList) => {\r\n      const divs = []\r\n      var stackIdx = 1\r\n      techList.forEach(items => {\r\n        const badges = items.map(item => {\r\n          const k = item.split(' ').map(w => w.toLowerCase()).join('-')\r\n          return(<Badge key={k} variant=\"light\" as=\"button\">{item}</Badge>)\r\n        })\r\n        divs.push(<div key={\"stack-\"+stackIdx}>{badges}</div>)\r\n        stackIdx++\r\n      })\r\n      return divs\r\n    }\r\n\r\n    const rows = []\r\n    for (const k of Enums.enumKeys(TechType)) {\r\n      const v = TechType[k]\r\n      var techList = []\r\n      switch(v) {\r\n        case TechType.langs:\r\n          techList = [languages]\r\n          break\r\n        case TechType.backend:\r\n          techList = [backend, db, servers]\r\n          break\r\n        case TechType.frontend:\r\n          techList = [frontend, mobile]\r\n          break\r\n        case TechType.os:\r\n          techList = [os]\r\n          break\r\n        case TechType.tools:\r\n          techList = [ides, editors, other]\r\n          break\r\n        default:\r\n          break\r\n      }\r\n      const techDivs = createDivs(techList)\r\n      const rowKey = v.split(' ').map(w => w.toLowerCase()).join('-')\r\n      rows.push(\r\n        <Row key={rowKey} className=\"tech-row\">\r\n          <Col xs={3}><Card.Subtitle>{v}</Card.Subtitle></Col>\r\n          <Col>{techDivs}</Col>\r\n        </Row>\r\n      )\r\n    }\r\n    \r\n    return (\r\n      <Container className=\"tech-container\">\r\n        {rows}\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Tech","import React from \"react\"\r\nimport { Card, Col, Container } from \"react-bootstrap\"\r\n\r\nexport default function ColumnView(title, content, xs = 6) {\r\n  return(\r\n    <Col xs={xs}>\r\n      <Card.Body>\r\n        <Card.Title>{title}</Card.Title>\r\n        <Container>{content}</Container>\r\n      </Card.Body>\r\n    </Col>\r\n  )\r\n}","import React, { Component } from 'react';\r\nimport { Badge, Card, Col, Container, Row } from 'react-bootstrap';\r\nimport ColumnView from '../components/ColumnView';\r\n\r\nclass PR extends Component {\r\n\r\n  render() {\r\n    class Lang {\r\n      constructor(abbr, name, level, description) {\r\n        this.abbr = abbr\r\n        this.name = name\r\n        this.level = level\r\n        this.description = description\r\n      }\r\n    }\r\n    const langLv = {\r\n      BEGINNER: \"Beginner\", \r\n      CONVERSATIONAL: \"Conversational\", \r\n      BUSINESS: \"Business\", \r\n      NATIVE: \"Native\"\r\n    }\r\n    const languages = [\r\n      new Lang(\"en\", \"English\", langLv.BUSINESS, \"Graduated in Canada\"),\r\n      new Lang(\"jp\", \"Japanese\", langLv.BUSINESS, \"JTEST A-D 673\"),\r\n      new Lang(\"cn\", \"Chinese Mandarin\", langLv.NATIVE, \"Chinese Traditional\"),\r\n      new Lang(\"hk\", \"Cantonese\", langLv.CONVERSATIONAL, \"Chinese Traditional\"),\r\n      new Lang(\"kr\", \"Korean\", langLv.BEGINNER, \"Able to use dictionary\"),\r\n    ]\r\n    const langRows = languages.map(lang => {\r\n      return(\r\n        <Row key={lang.abbr} className=\"lang-row border-bottom\">\r\n          <Col>{lang.name}</Col>\r\n          <Col>\r\n            {lang.level}<br/>\r\n            {lang.description}\r\n          </Col>\r\n        </Row>\r\n      )\r\n    })\r\n\r\n    const interests = [\"musics\", \"novels\", \"fictions\", \"movies\", \"videdo games\", \r\n    \"linguistics\", \"geeking\"].map((b, i) => {\r\n      return(<Badge key={`badge-${i}`} variant=\"light\" as=\"button\">{b}</Badge>)\r\n    })\r\n\r\n    const colLangs = ColumnView(\"Languages\", langRows)\r\n    const colInterests = ColumnView(\"Interests\", interests)\r\n\r\n    return (\r\n      <Container>\r\n        <Row>\r\n          {colLangs}\r\n          {colInterests}\r\n        </Row>\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nexport default PR","import React, { Component } from 'react';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport { Card, Container, Row } from 'react-bootstrap';\r\nimport ColumnView from '../components/ColumnView';\r\nimport { ScrollView } from 'react-native';\r\n\r\nclass Projects extends Component {\r\n\r\n  viewApp = (url) => {\r\n    confirmAlert({\r\n      title: \"Warning: Opening External Link\",\r\n      message: url,\r\n      buttons: [\r\n        {\r\n          label: \"Cancel\",\r\n        },\r\n        {\r\n          label: 'Open',\r\n          onClick: () => {\r\n            Linking.openURL(url)\r\n          }\r\n        }, \r\n      ],\r\n      closeOnEscape: true,\r\n      closeOnClickOutside: true,\r\n    })\r\n  }\r\n\r\n  render() {\r\n\r\n    class CompanyProject {\r\n      constructor(url, name, company, period) {\r\n        this.url = url\r\n        this.name = name\r\n        this.company = company\r\n        this.period = period\r\n      }\r\n    }\r\n    const companyProjects = [\r\n      new CompanyProject(\"#\", \"LION FX iOS\", \"JFX\", \"2019-2020\"),\r\n      new CompanyProject(\"#\", \"LION FX Android\", \"JFX\", \"2019-2020\"),\r\n    ]\r\n\r\n    const scoller = (projs) => {\r\n      const items = projs.map((proj, idx) => {\r\n        return(\r\n          <div key={`project-${idx}`}>\r\n            <Card.Subtitle onClick={()=>this.viewApp(proj.url)}>{proj.name}</Card.Subtitle>\r\n            <Card.Body>\r\n              <span>{proj.company}</span>\r\n              <span>{proj.period}</span>\r\n            </Card.Body>\r\n          </div>\r\n        )\r\n      })\r\n      return(\r\n        <ScrollView>\r\n          {items}\r\n        </ScrollView>\r\n      )\r\n    }\r\n\r\n    const colCompany = ColumnView(\"For Company\", scoller(companyProjects))\r\n    const colPersonal = ColumnView(\"Personal\", \"Lorem Ipsum\")\r\n    return (\r\n      <Container>\r\n        <Row>\r\n          {colCompany}\r\n          {colPersonal}\r\n        </Row>\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Projects","import React from 'react';\r\nimport { Container } from 'react-bootstrap';\r\nimport Section from './src/components/Section';\r\nimport SmoothNavBar from './src/components/SmoothNavBar';\r\nimport Enums, { NavItem } from './src/utils/Enums';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './App.css';\r\nimport Intro from './src/sections/intro/Intro';\r\nimport Tech from './src/sections/Tech';\r\nimport PR from './src/sections/pr';\r\nimport Projects from './src/sections/Projects';\r\n\r\nexport default function App() {\r\n  const section = (item) => {\r\n    switch(item) {\r\n      case NavItem.intro:\r\n        return(<Intro/>)\r\n      case NavItem.techs:\r\n        return(<Tech/>)\r\n      case NavItem.pr:\r\n        return(<PR/>)\r\n      case NavItem.projects:\r\n        return(<Projects/>)\r\n    }\r\n  }\r\n  const sections = []\r\n  for (const k of Enums.enumKeys(NavItem)) {\r\n    const v = NavItem[k]\r\n    sections.push(\r\n      Section(k, v, section(v))\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <SmoothNavBar />\r\n      {sections}\r\n    </Container>\r\n  );\r\n}\r\n","import React from \"react\"\r\nimport { Card } from \"react-bootstrap\"\r\n\r\nexport default function Section(id, title, content) {\r\n  return(\r\n    <Card key={id} id={id}>\r\n      <Card.Header>{title}</Card.Header>\r\n      {content}\r\n    </Card>\r\n  )\r\n}","var api = require(\"!C:\\\\Users\\\\Hanabi Noir\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\expo-cli\\\\node_modules\\\\style-loader\\\\dist\\\\runtime\\\\injectStylesIntoStyleTag.js\");\n            var content = require(\"!!C:\\\\Users\\\\Hanabi Noir\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\expo-cli\\\\node_modules\\\\css-loader\\\\dist\\\\cjs.js!./App.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"C:\\\\Users\\\\Hanabi Noir\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\expo-cli\\\\node_modules\\\\css-loader\\\\dist\\\\runtime\\\\api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".navbar {\\r\\n  padding-top: 0px;\\r\\n  margin-top: 40px;\\r\\n}\\r\\n\\r\\n.intro-container > .row {\\r\\n  min-height: 32px;\\r\\n  margin-top: 3px;\\r\\n  margin-bottom: 3px;\\r\\n}\\r\\n\\r\\n.title-row {\\r\\n  height: 54px;\\r\\n}\\r\\n\\r\\n.card {\\r\\n  margin-bottom: 40px;\\r\\n}\\r\\n\\r\\n.card-title {\\r\\n  margin-top: 15px;\\r\\n  margin-bottom: 15px;\\r\\n  text-align: center;\\r\\n}\\r\\n\\r\\n.profile-icons {\\r\\n  display: flex;\\r\\n  align-items: center;\\r\\n  justify-content: space-around;\\r\\n}\\r\\n\\r\\n.profile-icons > svg {\\r\\n  height: 24px;\\r\\n  width: 24px;\\r\\n}\\r\\n\\r\\n.profile-icons > svg:hover {\\r\\n  cursor: pointer;\\r\\n}\\r\\n\\r\\n.contact-icons > svg {\\r\\n  height: 18px;\\r\\n  width: 18px;\\r\\n  margin-right: 3px;\\r\\n}\\r\\n\\r\\n.badge {\\r\\n  color: black;\\r\\n  border: none;\\r\\n  margin-right: 5px;\\r\\n}\\r\\n\\r\\n.tech-container {\\r\\n  padding-top: 6px;\\r\\n  padding-bottom: 6px;\\r\\n}\\r\\n\\r\\n.tech-row {\\r\\n  align-items: baseline;\\r\\n  padding: 3px 0px;\\r\\n}\\r\\n\\r\\n.furigana {\\r\\n  display: flex;\\r\\n  align-items: center;\\r\\n  justify-content: space-around;\\r\\n  margin-top: 15px;\\r\\n  margin-bottom: -15px;\\r\\n}\\r\\n\\r\\n.sino-name {\\r\\n  display: flex;\\r\\n  align-items: center;\\r\\n  justify-content: space-around;\\r\\n}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","module.exports = __webpack_public_path__ + \"static/media/avatar_160x160.061b615c.jpg\";"],"sourceRoot":""}