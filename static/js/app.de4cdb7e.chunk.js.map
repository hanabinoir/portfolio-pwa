{"version":3,"sources":["src/utils/Enums.tsx","src/utils/i18n.js","src/components/SmoothNavBar.js","src/components/Http.js","src/utils/JapaneseEra.tsx","src/utils/Utils.js","src/utils/Calendar.js","src/sections/intro/Profile.js","src/sections/intro/Contact.js","src/sections/intro/Intro.js","src/sections/Tech.js","src/components/ColumnView.js","src/sections/pr.js","src/sections/Projects.js","App.js","src/components/Section.js","webpack:////Users/hanabinoir/ReactApps/portfolio-web/App.css?f905","App.css","assets/avatar_160x160.jpg"],"names":["NavItem","TechType","HttpMethod","Enums","e","Object","keys","i18n","use","LanguageDetector","initReactI18next","init","resources","en","translation","jp","interpolation","escapeValue","GetLanguage","language","window","localStorage","i18nextLng","SmoothNavBar","switchLanguage","preventDefault","location","reload","target","changeLanguage","navItems","enumKeys","k","push","Nav","Link","key","href","Navbar","bg","expand","sticky","className","Button","variant","onClick","this","Collapse","id","Component","Http","action","request","localUrl","fetch","then","response","res","ok","json","status","statusText","console","error","url","Promise","resolve","reject","catch","i","MakeRequest","method","get","headers","JapaneseEra","name","nameEN","dateStarted","Browser","navigator","userAgent","indexOf","document","documentMode","LocalTime","date","locale","timezone","isChrome","str","toLocaleDateString","timeZone","separator","parts","split","year","month","day","Profile","mainContent","useState","isLoading","setLoading","data","setData","lang","setLang","useEffect","encodeURIComponent","undefined","finally","strAddress","transit","stationAccess","strBirth","validity","address","addressParts","town","ward","city","prefecture","country","line","station","colItemWidth","birth","Date","identity","txtIntro","forEach","pop","reverse","join","access","map","x","time","Container","Row","Col","Card","Title","Translation","t","xs","eras","sort","a","b","index","length","getYear","includes","Wareki","months","lblYear","lblMonth","years","Math","floor","remainder","Experience","ActivityIndicator","Body","Contact","sns","files","openExternal","isEmailAddr","validator","isEmail","lblOK","confirmAlert","title","message","buttons","label","Linking","openURL","closeOnEscape","closeOnClickOutside","Intro","props","state","setState","colLeft","txtName","Subtitle","Img","src","require","Alert","style","display","Tech","languages","backend","db","servers","frontend","mobile","os","ides","editors","other","createDivs","techList","divs","stackIdx","items","badges","item","w","toLowerCase","Badge","as","rows","v","langs","tools","techDivs","rowKey","ColumnView","content","PR","Lang","abbr","level","description","langLv","langRows","interests","colLangs","colInterests","Projects","viewApp","CompanyProject","company","period","colCompany","projs","proj","idx","ScrollView","scoller","colPersonal","App","section","intro","techs","pr","projects","sections","Header","api","__esModule","default","module","options","exports","locals","___CSS_LOADER_API_IMPORT___"],"mappings":"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","file":"static/js/app.de4cdb7e.chunk.js","sourcesContent":["export enum NavItem {\n  intro = \"Introduction\",\n  techs = \"Technologies\",\n  pr = \"PR\",\n  projects = \"Projects\"\n}\n\nexport enum TechType {\n  langs = \"Programming Languages\",\n  backend = \"Backend\",\n  frontend = \"Frontend\",\n  os = \"OS\",\n  tools = \"Tools\"\n}\n\nexport enum HttpMethod {\n  get = \"GET\", \n  post = \"POST\", \n  put = \"PUT\", \n  delete = \"DELETE\"\n}\n\nexport default class Enums {\n\n  static enumKeys<E>(e: E): (keyof E)[] {\n    return Object.keys(e) as (keyof E)[];\n  }\n  \n}","import i18n from \"i18next\";\nimport { initReactI18next } from \"react-i18next\";\nimport LanguageDetector from \"i18next-browser-languagedetector\";\n\nconst resources = {\n  en: {\n    translation: {\n      'address': 'Address',\n      'transit': 'Nearest Station',\n      'birth': 'DOB', \n      'identity': 'Identity',\n      'nationality': 'Nationality',\n      'visa': 'Visa', \n      'validity': 'Validity',\n      'experience': \"Experienced Years\", \n      'intro': \"Personal Introduction\",\n    }\n  }, \n  jp: {\n    translation: {\n      'address': '住所', \n      'transit': '最寄駅',\n      'birth': '生年月日', \n      'identity': '身分',\n      'nationality': '国籍',\n      'visa': '在留資格', \n      'validity': '有効期限',\n      'experience': \"経験年数\", \n      'intro': \"個人紹介\",\n    }\n  }\n}\n\ni18n\n  .use(LanguageDetector)\n  .use(initReactI18next)\n  .init({\n    resources: resources,\n    interpolation: {\n      escapeValue: false\n    }\n  })\n\nexport default i18n\n\nexport function GetLanguage() {\n  return i18n.language ||\n    (typeof window !== 'undefined' && window.localStorage.i18nextLng) ||\n    'en';\n};","import React from 'react';\nimport { Component } from \"react\";\nimport { Button, Nav, Navbar } from \"react-bootstrap\";\nimport Enums, { NavItem } from \"../utils/Enums\";\nimport i18n, { GetLanguage } from '../utils/i18n';\n\nclass SmoothNavBar extends Component {\n\n    switchLanguage = (e) => {\n        e.preventDefault()\n        window.location.reload()\n        const current = GetLanguage()\n        const target = current == 'en' ? 'jp' : 'en'\n        i18n.changeLanguage(target)\n    }\n\n    render() {\n        const navItems = []\n        for (const k of Enums.enumKeys(NavItem)) {\n            navItems.push(\n                <Nav.Link key={k} href={\"#\" + k}>{NavItem[k]}</Nav.Link>\n            )\n        }\n\n        return(\n            <Navbar bg=\"light\" expand=\"lg\" sticky=\"top\" \n                className=\"shadow p-3 mb-5 bg-white rounded\">\n                <Button variant='light' onClick={this.switchLanguage}>EN/JP</Button>\n                <Navbar.Collapse \n                    className=\"justify-content-end\" \n                    id=\"basic-navbar-nav\">\n                    <Nav className=\"mr-auto\">\n                        {navItems}\n                    </Nav>\n                </Navbar.Collapse>\n            </Navbar>\n        )\n    }\n}\n\nexport default SmoothNavBar","import { HttpMethod } from \"../utils/Enums\"\n\nexport default function Http(action, request) {\n\n  let url = `https://hanabi-tube.herokuapp.com/${action}`\n  let localUrl = `http://127.0.0.1:5000/${action}`\n\n  return fetch(localUrl, { request })\n  .then((response) => {\n    var res\n\n    if (response.ok) {\n      res = response.json()\n    } else {\n      res = {\n        \"status\": response.status,\n        \"msg\": response.statusText,\n        'is_error': !response.ok\n      }\n      console.error({url: localUrl, res: res})\n    }\n\n    return new Promise((resolve, reject) => {\n      resolve(res)\n    })\n  })\n  .catch((error) => console.error({i: localUrl, e: error}))\n  \n}\n\nexport function MakeRequest(method = HttpMethod.get) {\n  return {\n    method: method,\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  }\n}","export default class JapaneseEra {\n  name: String\n  nameEN: String\n  dateStarted: Date\n\n  constructor(name: String, nameEN:String, dateStarted: Date) {\n    this.name = name\n    this.nameEN = nameEN\n    this.dateStarted = dateStarted\n  }\n}","export function Browser() { \n  if((navigator.userAgent.indexOf(\"Opera\") || navigator.userAgent.indexOf('OPR')) != -1 ) {\n      return 'Opera';\n  } else if(navigator.userAgent.indexOf(\"Chrome\") != -1 ) {\n      return 'Chrome';\n  } else if(navigator.userAgent.indexOf(\"Safari\") != -1) {\n      return 'Safari';\n  } else if(navigator.userAgent.indexOf(\"Firefox\") != -1 ){\n      return 'Firefox';\n  } else if((navigator.userAgent.indexOf(\"MSIE\") != -1 ) || (!!document.documentMode == true )) {\n      return 'IE';//crap\n  } else {\n      return 'Unknown';\n  }\n}","import JapaneseEra from \"./JapaneseEra\"\nimport { Browser } from \"./Utils\";\n\nexport function Wareki(date, lang) {\n  const eras = [\n    new JapaneseEra('令和', 'Reiwa', new Date('2019-05-01')),\n    new JapaneseEra('平成', 'Heisei', new Date('1989-01-08')),\n    new JapaneseEra('昭和', 'Showa', new Date('1926-12-25')),\n    new JapaneseEra('大正', 'Taisho', new Date('1912-07-30')),\n  ].sort((a, b) => a.dateStarted > a.dateStarted)\n\n  for (let index = 0; index < eras.length; index++) {\n    const e = eras[index];\n    if (date >= e.dateStarted) {\n      const year = date.getYear() - e.dateStarted.getYear() + 1\n      return lang.includes('en') \n        ? `${e.nameEN} ${year}` \n        : `${e.name}${year}年`\n    }\n  }\n}\n\nexport function LocalTime(date, locale = 'jp-JP', timezone = 'Japan') {\n  let res\n\n  if (locale == 'jp-JP') {\n    const isChrome = Browser() == 'Chrome' \n    const str = date.toLocaleDateString(locale, { timeZone: timezone})\n    const separator = isChrome ? '/' : '-'\n    const parts = str.split(separator)\n    res = isChrome\n    ? `${parts[2]}年${parts[1]}月${parts[0]}日`\n    : `${parts[0]}年${parts[1]}月${parts[2]}日`\n  } else {\n    res = date.toLocaleDateString(locale, { \n      timeZone: timezone,\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    })\n  }\n  \n  return res\n}\n\nexport function Experience(months, lang) {\n  const years = Math.floor(months / 12.0)\n  const remainder = months % 12\n\n  let lblYear, lblMonth, res\n  if (lang.includes('en')) {\n    lblYear = years < 1 ? 'year' : 'years'\n    lblMonth = months < 1 ? 'month' : 'months'\n\n    res = years < 1 \n      ? `${months} ${lblMonth}` \n      : `${years} ${lblYear} ${remainder} ${lblMonth}`\n  } else {\n    lblYear = '年'\n    lblMonth = '月'\n\n    if (months == 6) {\n      res = '半年'\n    } else if (remainder == 6) {\n      res = `${years}年半`\n    } else {\n      res = years < 1 \n        ? `${months}${lblMonth}` \n        : `${years}${lblYear}${remainder}${lblMonth}`\n    }\n  }\n  return res\n}","import React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { Col, Card, Container, Row } from \"react-bootstrap\";\nimport { Translation } from 'react-i18next';\nimport { ActivityIndicator } from \"react-native\";\nimport Http, { MakeRequest } from \"../../components/Http\";\nimport { Experience, LocalTime, Wareki } from \"../../utils/Calendar\";\nimport { GetLanguage } from '../../utils/i18n';\n\nexport default function Profile() {\n\n  const [isLoading, setLoading] = useState(true)\n  const [data, setData] = useState([])\n  const [lang, setLang] = useState('')\n\n  useEffect(() => {\n    const request = MakeRequest()\n    const lang = GetLanguage()\n    Http(`profile?lang=${encodeURIComponent(lang)}`, request)\n    .then((res) => {\n      if (res !== undefined) {\n        setData(res)\n      }\n    })\n    .finally(() => {\n      setLoading(false)\n      setLang(lang)\n    })\n  }, [])\n\n  let mainContent\n  if (!isLoading && !data['is_error']) {\n    const address = data.address\n\n    let strAddress, transit, stationAccess, strBirth, validity\n    const addressParts = [address.town, address.ward, address.city, address.prefecture, address.country]\n    transit = `${data['transit'].line} ${data['transit'].station}`\n    const birth = new Date(data['birth'])\n    const identity = data['identity']\n\n    const txtIntro = []\n    data['summary'].split('\\\\n\\\\n').forEach((e, i) => {\n      txtIntro.push(<p key={i}>{e}</p>)\n    })\n\n    let colItemWidth\n\n    if (lang == 'jp') {\n      addressParts.pop()\n      strAddress = addressParts.reverse().join(' ')\n      stationAccess = data['transit'].access.map(x => `${x.method}${x.time}分`).join(', ')\n      strBirth = LocalTime(birth)\n      validity = LocalTime(new Date(identity['expire_on']))\n\n      colItemWidth = 2\n    } else {\n      strAddress = addressParts.join(', ')\n      transit += ' Line'\n      stationAccess = data['transit'].access.map(x => `${x.time} mins ${x.method}`).join(', ')\n      strBirth = LocalTime(birth, 'en-US', 'Asia/Taipei')\n      validity = LocalTime(new Date(identity['expire_on']), 'en-US', 'Japan')\n\n      colItemWidth = 3\n    }\n\n    mainContent = (\n      <Container className=\"intro-container\">\n        <Row className=\"title-row\">\n          <Col><Card.Title>{ data['title'] }</Card.Title></Col>\n        </Row>\n        <Row>\n          <Translation>{ t => <Col xs={ colItemWidth }><b>{t('address')}</b></Col>}</Translation>\n          <Col>〒{address['postal_code']}　{strAddress}</Col>\n        </Row>\n        <Row>\n          <Translation>{ t => <Col xs={ colItemWidth }><b>{t('transit')}</b></Col>}</Translation>\n          <Col>{transit}　{stationAccess}</Col>\n        </Row>\n        <Row>\n          <Translation>{ t => <Col xs={ colItemWidth }><b>{t('birth')}</b></Col>}</Translation>\n          <Col>{strBirth}　{Wareki(birth, lang)}</Col>\n        </Row>\n        <Row>\n          <Translation>{ t => <Col xs={ colItemWidth }><b>{t('identity')}</b></Col>}</Translation>\n          <Translation>\n            { t => \n              <Col>\n                {t('nationality')}：{identity['nationality']}<br/>\n                {t('visa')}：{identity['visa']}<br/>\n                {t('validity')}：{validity}\n              </Col>\n            }\n          </Translation>\n          \n        </Row>\n        <Row>\n          <Translation>{ t => <Col xs={ colItemWidth }><b>{t('experience')}</b></Col>}</Translation>\n          <Col>{Experience(data['experience'], lang)}</Col>\n        </Row>\n        <Row>\n          <Translation>{ t => <Col xs={ colItemWidth }><b>{t('intro')}</b></Col>}</Translation>\n          <Col>{ txtIntro }</Col>\n        </Row>\n      </Container>\n    )\n  }\n  \n\n  return(<Col>{ isLoading \n    ? <ActivityIndicator/> \n    : <Card.Body>{mainContent}</Card.Body> }</Col>)\n}","import React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { FaGithub, FaLinkedin, FaTwitter, FaFileExcel, FaFileWord, FaFilePdf } from 'react-icons/fa'\nimport { IoDocumentOutline } from 'react-icons/io5'\nimport { TiContacts, TiMail} from 'react-icons/ti'\nimport { ActivityIndicator } from \"react-native\";\nimport Http, { MakeRequest } from \"../../components/Http\";\nimport validator from 'validator';\nimport { confirmAlert } from \"react-confirm-alert\";\n\nexport default function Contact() {\n  const [isLoading, setLoading] = useState(true)\n  const [data, setData] = useState([])\n  const [lang, setLang] = useState('')\n\n  useEffect(() => {\n    const request = MakeRequest()\n    Http('contact', request)\n    .then((res) => {\n      if (res !== undefined) {\n        setData(res)\n      }\n    })\n    .finally(() => {\n      setLoading(false)\n      setLang(lang)\n    })\n  }, [])\n\n  function openExternal(url) {\n    const isEmailAddr = validator.isEmail(url)\n    const lblOK = isEmailAddr ? \"Send\" : \"Open\"\n\n    confirmAlert({\n      title: \"Warning: Opening External Link\",\n      message: url,\n      buttons: [\n        {\n          label: \"Cancel\",\n        },\n        {\n          label: lblOK,\n          onClick: () => {\n            if (isEmailAddr) {\n              url = `mailto:${url}`\n            }\n            Linking.openURL(url)\n          }\n        }, \n      ],\n      closeOnEscape: true,\n      closeOnClickOutside: true,\n    })\n  }\n\n  let sns, files\n\n  if (!isLoading && !data['is_error']) {\n    sns = (\n      <div className=\"profile-icons\">\n        <FaGithub onClick={ () => { openExternal(data['github']) } }/>\n        <FaLinkedin onClick={ () => { openExternal(data['linkedin']) } }/>\n        <FaTwitter onClick={ () => { openExternal(data['twitter']) } }/>\n      </div>\n    )\n\n    files = (\n      <div className=\"contact-icons\">\n        <TiMail/><a href=\"#\" onClick={ () => { openExternal(data['email'])} }>{data['email']}</a><br/>\n        <IoDocumentOutline/>CV: <FaFileWord/>/<FaFilePdf/><br/>\n        <IoDocumentOutline/>履歴書: <FaFileExcel/>/<FaFilePdf/><br/>\n        <IoDocumentOutline/>職務経歴書: <FaFileWord/>/<FaFilePdf/><br/>\n        <TiContacts/>Contact Me\n      </div>\n    )\n  }\n\n  return(<div>{ isLoading \n    ? <ActivityIndicator/> \n    : <div>{sns}{files}</div>}</div>)\n}","import React, { Component } from 'react';\nimport { Alert, Card, Col, Container, Row } from 'react-bootstrap';\nimport { ActivityIndicator } from 'react-native';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport Http, { MakeRequest } from '../../components/Http';\nimport '../../utils/i18n';\nimport { GetLanguage } from '../../utils/i18n';\nimport Profile from './Profile';\nimport Contact from './Contact';\n\nclass Intro extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      data: [],\n      isLoading: true, \n      lang: '',\n    };\n  }\n\n  componentDidMount() {\n\n    const lang = GetLanguage()\n    const request = MakeRequest()\n    Http(`basic?lang=${encodeURIComponent(lang)}`, request)\n    .then((res) => {\n      if (res !== undefined) {\n        this.setState({ data: res })\n      }\n    })\n    .finally(() => {\n      this.setState({ \n        isLoading: false, \n        lang: lang \n      })\n    })\n  }\n\n  render() {\n    const { data, isLoading, lang } = this.state\n\n    let colLeft\n\n    if (!isLoading && !data['is_error']) {\n\n      const txtName = lang.includes('en') \n        ? (<Card.Title>{data['first_name']} {data['last_name']}</Card.Title>)\n        : (<div>\n          <Card.Subtitle className=\"text-muted furigana\">{data['last_name_jp']} {data['first_name_jp']}</Card.Subtitle>\n          <Card.Title className=\"sino-name\">{data['last_name']} {data['first_name']}</Card.Title>\n        </div>)\n\n      colLeft = (\n        <Col className=\"col-auto\">\n          <Card.Body>\n            <Card.Img src={require('../../../assets/avatar_160x160.jpg')} />\n            {txtName}\n            <Contact/>\n          </Card.Body>\n        </Col>\n      )\n    }\n    return (\n      <Container>\n        { isLoading ? <ActivityIndicator/> :\n        <Row>\n          <Alert style={{ display: data['is_error'] ? 'block' : 'none' }}\n              variant='warning'>{data['status']}: \n              {data['msg']}</Alert>\n            {colLeft}\n            <Profile/>\n        </Row>}\n      </Container>\n    )\n  }\n}\n\nexport default Intro","import React, { Component } from 'react';\nimport { Badge, Card, Col, Container, Row } from 'react-bootstrap';\nimport Enums, { TechType } from '../utils/Enums';\n\nclass Tech extends Component {\n\n  render() {\n    var languages = ['C#', 'Swfit', 'PHP', 'JavaScript', 'Java', 'Kotlin', 'Objective-C', 'HTML', 'CSS', 'Python 3']\n    var backend = ['NET Framework', 'Laravel 5', 'Spring Boot']\n    var db = ['MySQL', 'MS SQL Server', 'mongodb']\n    var servers = ['IIS5', 'IIS7', 'Apache 2', 'Tomcat 8']\n    var frontend = ['vue', 'react']\n    var mobile = ['cocoapod', 'UIKit', 'nib/xib', 'cocoa', 'storyboard']\n    var os = ['Windows 10', 'Windows Server 2012', 'Ubuntu 14.04 LTS', 'Centos 8', 'macOS', 'iOS', 'Android']\n    var ides = ['Visual Studio 2017', 'VS Code', 'Xcode', 'Intellij', 'eclipse', 'PyCharm']\n    var editors = ['Notepad++', 'Sublime Text 3']\n    var other = ['Unity3D', 'jsfiddle']\n\n    const createDivs = (techList) => {\n      const divs = []\n      var stackIdx = 1\n      techList.forEach(items => {\n        const badges = items.map(item => {\n          const k = item.split(' ').map(w => w.toLowerCase()).join('-')\n          return(<Badge key={k} variant=\"light\" as=\"button\">{item}</Badge>)\n        })\n        divs.push(<div key={\"stack-\"+stackIdx}>{badges}</div>)\n        stackIdx++\n      })\n      return divs\n    }\n\n    const rows = []\n    for (const k of Enums.enumKeys(TechType)) {\n      const v = TechType[k]\n      var techList = []\n      switch(v) {\n        case TechType.langs:\n          techList = [languages]\n          break\n        case TechType.backend:\n          techList = [backend, db, servers]\n          break\n        case TechType.frontend:\n          techList = [frontend, mobile]\n          break\n        case TechType.os:\n          techList = [os]\n          break\n        case TechType.tools:\n          techList = [ides, editors, other]\n          break\n        default:\n          break\n      }\n      const techDivs = createDivs(techList)\n      const rowKey = v.split(' ').map(w => w.toLowerCase()).join('-')\n      rows.push(\n        <Row key={rowKey} className=\"tech-row\">\n          <Col xs={3}><Card.Subtitle>{v}</Card.Subtitle></Col>\n          <Col>{techDivs}</Col>\n        </Row>\n      )\n    }\n    \n    return (\n      <Container className=\"tech-container\">\n        {rows}\n      </Container>\n    )\n  }\n}\n\nexport default Tech","import React from \"react\"\nimport { Card, Col, Container } from \"react-bootstrap\"\n\nexport default function ColumnView(title, content, xs = 6) {\n  return(\n    <Col xs={xs}>\n      <Card.Body>\n        <Card.Title>{title}</Card.Title>\n        <Container>{content}</Container>\n      </Card.Body>\n    </Col>\n  )\n}","import React, { Component } from 'react';\nimport { Badge, Card, Col, Container, Row } from 'react-bootstrap';\nimport ColumnView from '../components/ColumnView';\n\nclass PR extends Component {\n\n  render() {\n    class Lang {\n      constructor(abbr, name, level, description) {\n        this.abbr = abbr\n        this.name = name\n        this.level = level\n        this.description = description\n      }\n    }\n    const langLv = {\n      BEGINNER: \"Beginner\", \n      CONVERSATIONAL: \"Conversational\", \n      BUSINESS: \"Business\", \n      NATIVE: \"Native\"\n    }\n    const languages = [\n      new Lang(\"en\", \"English\", langLv.BUSINESS, \"Graduated in Canada\"),\n      new Lang(\"jp\", \"Japanese\", langLv.BUSINESS, \"JTEST A-D 673\"),\n      new Lang(\"cn\", \"Chinese Mandarin\", langLv.NATIVE, \"Chinese Traditional\"),\n      new Lang(\"hk\", \"Cantonese\", langLv.CONVERSATIONAL, \"Chinese Traditional\"),\n      new Lang(\"kr\", \"Korean\", langLv.BEGINNER, \"Able to use dictionary\"),\n    ]\n    const langRows = languages.map(lang => {\n      return(\n        <Row key={lang.abbr} className=\"lang-row border-bottom\">\n          <Col>{lang.name}</Col>\n          <Col>\n            {lang.level}<br/>\n            {lang.description}\n          </Col>\n        </Row>\n      )\n    })\n\n    const interests = [\"musics\", \"novels\", \"fictions\", \"movies\", \"videdo games\", \n    \"linguistics\", \"geeking\"].map((b, i) => {\n      return(<Badge key={`badge-${i}`} variant=\"light\" as=\"button\">{b}</Badge>)\n    })\n\n    const colLangs = ColumnView(\"Languages\", langRows)\n    const colInterests = ColumnView(\"Interests\", interests)\n\n    return (\n      <Container>\n        <Row>\n          {colLangs}\n          {colInterests}\n        </Row>\n      </Container>\n    )\n  }\n}\n\nexport default PR","import React, { Component } from 'react';\nimport { confirmAlert } from 'react-confirm-alert';\nimport { Card, Container, Row } from 'react-bootstrap';\nimport ColumnView from '../components/ColumnView';\nimport { ScrollView } from 'react-native';\n\nclass Projects extends Component {\n\n  viewApp = (url) => {\n    confirmAlert({\n      title: \"Warning: Opening External Link\",\n      message: url,\n      buttons: [\n        {\n          label: \"Cancel\",\n        },\n        {\n          label: 'Open',\n          onClick: () => {\n            Linking.openURL(url)\n          }\n        }, \n      ],\n      closeOnEscape: true,\n      closeOnClickOutside: true,\n    })\n  }\n\n  render() {\n\n    class CompanyProject {\n      constructor(url, name, company, period) {\n        this.url = url\n        this.name = name\n        this.company = company\n        this.period = period\n      }\n    }\n    const companyProjects = [\n      new CompanyProject(\"#\", \"LION FX iOS\", \"JFX\", \"2019-2020\"),\n      new CompanyProject(\"#\", \"LION FX Android\", \"JFX\", \"2019-2020\"),\n    ]\n\n    const scoller = (projs) => {\n      const items = projs.map((proj, idx) => {\n        return(\n          <div key={`project-${idx}`}>\n            <Card.Subtitle onClick={()=>this.viewApp(proj.url)}>{proj.name}</Card.Subtitle>\n            <Card.Body>\n              <span>{proj.company}</span>\n              <span>{proj.period}</span>\n            </Card.Body>\n          </div>\n        )\n      })\n      return(\n        <ScrollView>\n          {items}\n        </ScrollView>\n      )\n    }\n\n    const colCompany = ColumnView(\"For Company\", scoller(companyProjects))\n    const colPersonal = ColumnView(\"Personal\", \"Lorem Ipsum\")\n    return (\n      <Container>\n        <Row>\n          {colCompany}\n          {colPersonal}\n        </Row>\n      </Container>\n    )\n  }\n}\n\nexport default Projects","import React from 'react';\nimport { Container } from 'react-bootstrap';\nimport Section from './src/components/Section';\nimport SmoothNavBar from './src/components/SmoothNavBar';\nimport Enums, { NavItem } from './src/utils/Enums';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport Intro from './src/sections/intro/Intro';\nimport Tech from './src/sections/Tech';\nimport PR from './src/sections/pr';\nimport Projects from './src/sections/Projects';\n\nexport default function App() {\n  const section = (item) => {\n    switch(item) {\n      case NavItem.intro:\n        return(<Intro/>)\n      case NavItem.techs:\n        return(<Tech/>)\n      case NavItem.pr:\n        return(<PR/>)\n      case NavItem.projects:\n        return(<Projects/>)\n    }\n  }\n  const sections = []\n  for (const k of Enums.enumKeys(NavItem)) {\n    const v = NavItem[k]\n    sections.push(\n      Section(k, v, section(v))\n    )\n  }\n\n  return (\n    <Container>\n      <SmoothNavBar />\n      {sections}\n    </Container>\n  );\n}\n","import React from \"react\"\nimport { Card } from \"react-bootstrap\"\n\nexport default function Section(id, title, content) {\n  return(\n    <Card key={id} id={id}>\n      <Card.Header>{title}</Card.Header>\n      {content}\n    </Card>\n  )\n}","var api = require(\"!../../../../usr/local/lib/node_modules/expo-cli/node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../usr/local/lib/node_modules/expo-cli/node_modules/css-loader/dist/cjs.js!./App.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../usr/local/lib/node_modules/expo-cli/node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".navbar {\\n  padding-top: 0px;\\n  margin-top: 40px;\\n}\\n\\n.intro-container > .row {\\n  min-height: 32px;\\n  margin-top: 3px;\\n  margin-bottom: 3px;\\n}\\n\\n.title-row {\\n  height: 54px;\\n}\\n\\n.card {\\n  margin-bottom: 40px;\\n}\\n\\n.card-title {\\n  margin-top: 15px;\\n  margin-bottom: 15px;\\n  text-align: center;\\n}\\n\\n.profile-icons {\\n  display: flex;\\n  align-items: center;\\n  justify-content: space-around;\\n}\\n\\n.profile-icons > svg {\\n  height: 24px;\\n  width: 24px;\\n}\\n\\n.profile-icons > svg:hover {\\n  cursor: pointer;\\n}\\n\\n.contact-icons > svg {\\n  height: 18px;\\n  width: 18px;\\n  margin-right: 3px;\\n}\\n\\n.badge {\\n  color: black;\\n  border: none;\\n  margin-right: 5px;\\n}\\n\\n.tech-container {\\n  padding-top: 6px;\\n  padding-bottom: 6px;\\n}\\n\\n.tech-row {\\n  align-items: baseline;\\n  padding: 3px 0px;\\n}\\n\\n.furigana {\\n  display: flex;\\n  align-items: center;\\n  justify-content: space-around;\\n  margin-top: 15px;\\n  margin-bottom: -15px;\\n}\\n\\n.sino-name {\\n  display: flex;\\n  align-items: center;\\n  justify-content: space-around;\\n}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","module.exports = __webpack_public_path__ + \"static/media/avatar_160x160.061b615c.jpg\";"],"sourceRoot":""}